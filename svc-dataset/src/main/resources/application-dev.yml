# 应用服务 WEB 访问端口
server:
  port: 8080

cors:
  # 浏览器允许所有的域访问  注意 * 不能满足带有cookie的访问,Origin 必须是全匹配
  allowed-origins: '*'
  allowed-methods: GET,POST,OPTIONS
  max-age: 3600
  allowed-headers: '*'
  # 允许带cookie访问
  allow-credentials: false

spring:
  datasource:
    # jdbc 连接基础配置
    username: postgres
    password: Abc123$%^
    url: jdbc:postgresql://localhost:5432/dataset
    driver-class-name: org.postgresql.Driver

    #hikari数据源特性配置
    hikari:
      maximum-pool-size: 8 #最大连接数,默认值10.
      minimum-idle: 8 #最小空闲连接，默认值10.

# 配置 mybatis-plus(mybatis)
mybatis-plus:
  # 包扫描路径(当前项目的实体类所在位置。别名包扫描路径，通过该属性可以给包中的类注册别名，多个路径用逗号分割)
  # 指定pojo扫描包位置让mybatis自动扫描到指定义的pojo包下
  type-aliases-package: com.ngw.**.pojo
  # 指定位置扫描Mapper接口对应的xml文件，多个目录用逗号或者分号分隔(告诉 Mapper 所对应的 XML 文件位置)
  mapper-locations: classpath*:com/ngw/**/xml/*.xml
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    #    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    # 允许在resultType="map"时映射null值
    #    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用(包括执行结果)
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 主键类型 AUTO:"数据库ID自增"
      # INPUT:"用户输入ID",
      # ID_WORKER:"全局唯一ID (数字类型唯一ID)",
      # UUID:"全局唯一ID UUID";
      id-type: ASSIGN_UUID
      # 字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      #      field-strategy: NOT_EMPTY
      # 数据库类型
      #      db-type: MYSQL
      # 逻辑删除配置
      # 删除前
      logic-not-delete-value: 0
      # 删除后
      logic-delete-value: 1
      # 数据库表名的前缀
      table-prefix: t_
      logic-delete-field: delFlag
logging:
  level:
    root: WARN
    com.ngw: DEBUG